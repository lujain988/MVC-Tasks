@model DBloginandreg.Models.User

@{
    ViewBag.Title = "User Registration";
}

<h2>User Registration</h2>
@if (ViewBag.SuccessMessage != null)
{
    <div class="alert alert-success">
        @ViewBag.SuccessMessage
    </div>
}

@using (Html.BeginForm("AddOrEdit", "User", FormMethod.Post))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal bg-white p-4 rounded shadow-sm">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="mb-3">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "form-label" })
            <div class="">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "form-label" })
            <div class="">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
            <div class="">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "form-label" })
            <div class="">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "form-label" })
            <div class="">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3">
            <div class="form-group">
                <label for="confirmPassword" class="control-label col-md-2">Confirm Password</label>
                <div class="col-md-10">
                    <input type="password" id="confirmPassword" class="form-control" name="confirmPassword" />
                    <span id="confirmPasswordError" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="d-flex justify-content-start">
            <input type="submit" value="Create Account" class="btn btn-primary" />
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @if (ViewBag.SuccessMessage != null)
                {
                    <label class="text-success">
                        @ViewBag.SuccessMessage
                    </label>
                }
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
